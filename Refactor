import random
import time

time_chase = random.randint(10, 60)
health = 100

user_yes = ["yes", "yeah", "yep", "y", "ye", "yea", "ok", "okay", "affirmative", "sounds good", "you got it",
            "whatever", "sure", "if i have to", "yeh", "yah"]
user_no = ["no", "no way", "that's stupid", "why would i do that?", "that's really dumb", "nope", "i don't think so",
           "that won't fly"]


# opening screen function
def opening_screen():
    print("Lanzix 2")
    # time.sleep(3)
    print("Objective: Escape.")
    # time.sleep(5)
    print("You wake up in a dark cave.")
    # time.sleep(5)
    print("You cannot see anything in the darkness.")


# function for user achievements
def achievement_unlocked(award, achievements):
    if (award not in achievements):
        # time.sleep(3)
        print(f'''You have been awarded the achievement "{award}."''')
        # time.sleep(3)
        print("You should be proud, these achievements are very difficult to acquire!")
        # time.sleep(3)
        print("How many are there?")
        # time.sleep(3)
        print("That's for you to discover!")
        achievements.append(award)
        # time.sleep(3)
        print("Achievements:")
        print(achievements)
        # time.sleep(3)
        pass
    else:
        pass


# we need to write a function that will handle the user fighting beasts
# we will need to pass in the user's health as a parameter as well as the loop variable
# we will return a tuple with the user's health and the loop variable
def fight_beast(health_param, loop_param):
    beasts_humanoid = ["troll", "giant", "bandit", "orc", "goblin", "draugr"]
    beasts_animal = ["wolf", "bear", "sabre cat", "troll", "giant", "dragon"]
    quote_during_battle_humanoid = ["Never should have come here!", "What are you doing in my swamp!", "*Low Growl*",
                                    "You're going to die!"]
    quote_during_battle_animal = ["*Howl*", "*Roar*", "*Growl*", "*Snarl*"]
    # we need to return a random beast from either the humanoid or animal list
    if random.randint(0, 1) == 0:
        beast = random.choice(beasts_humanoid)
        quote_during_battle = random.choice(quote_during_battle_humanoid)
        # time.sleep(3)
    else:
        beast = random.choice(beasts_animal)
        quote_during_battle = random.choice(quote_during_battle_animal)
        # time.sleep(3)
    print(f"You have encountered a {beast}!")
    # time.sleep(3)
    print(f'''{beast}: {random.choice(quote_during_battle)}''')
    if invulnerability_check(True):
        print("You are invulnerable!")
        # time.sleep(3)
        print("You continue on your journey.")
        # time.sleep(3)
        loop_param = loop_param
        return health_param, loop_param
    else:
        pass
    if weapon_check(True):
        print("You have a weapon!")
        # time.sleep(3)
        print("You have two options:")
        # time.sleep(3)
        print("1. Fight")
        # time.sleep(3)
        print("2. Run")
        user_choice = input("What do you choose? ")
        if user_choice == "1":
            damage = random.randint(0, 20)
            health_param -= damage
            if damage == 0:
                print(f"You dodged the attack!")
                # time.sleep(3)
                print("You continue on your journey.")
                # time.sleep(3)
                loop_param = loop_param
                return health_param, loop_param
            if health_param > 0:
                print(random.choice(quote_during_battle))
                # time.sleep(3)
                print(f"The {beast} deals {str(damage)} damage.")
                # time.sleep(3)
                print("Health: " + str(health_param))
                print("You attack the beast!")
                # time.sleep(3)]
                print("The beast flees!")
                # time.sleep(3)
                loop_param = loop_param
                return health_param, loop_param
            else:
                chance_to_run = random.randint(0, 1)
                if chance_to_run == 0:
                    print("You ran away!")
                    # time.sleep(3)
                    print("You continue on your journey.")
                    # time.sleep(3)
                    loop_param = loop_param
                    return health_param, loop_param
                else:
                    print("You failed to run away!")
                    # time.sleep(3)
                    print("The beast attacks!")
                    # time.sleep(3)
                    damage = random.randint(0, 20)
                    health_param -= damage
                    if health_param > 0:
                        print(random.choice(quote_during_battle))
                        # time.sleep(3)
                        print(f"The {beast} deals {str(damage)} damage.")
                        # time.sleep(3)
                        print("Health: " + str(health_param))
                        loop_param = loop_param
                        return health_param, loop_param
                    else:
                        print("You died.")
                        print("Debug statement - Testing battle_code_lite")
                        # time.sleep(3)
                        print("Health: " + str(health_param))
                        time_stop_death = time.perf_counter()
                        print(f"{time_stop_death}")
                        inventory = {}
                        active_effects = {}
                        achievements = []
                        loop_param = 1
                        return health_param, loop_param
    else:
        print("You have no weapon!")
        # time.sleep(3)
        print("You can only run!")
        # time.sleep(3)

        chance_to_run = random.randint(0, 1)
        if chance_to_run == 0:
            print("You ran away!")
            # time.sleep(3)
            print("You continue on your journey.")
            # time.sleep(3)
            loop_param = loop_param
            return health_param, loop_param
        else:
            print("You failed to run away!")
            # time.sleep(3)
            print("The beast attacks!")
            # time.sleep(3)
            damage = random.randint(0, 20)
            health_param -= damage
            if health_param > 0:
                print(random.choice(quote_during_battle))
                # time.sleep(3)
                print(f"The {beast} deals {str(damage)} damage.")
                # time.sleep(3)
                print("Health: " + str(health_param))
                loop_param = loop_param
                return health_param, loop_param
            else:
                print("You died.")
                print("Debug statement - Testing battle_code_lite")
                # time.sleep(3)
                print("Health: " + str(health_param))
                time_stop_death = time.perf_counter()
                print(f"{time_stop_death}")
                inventory = {}
                active_effects = {}
                achievements = []
                loop_param = 1
                return health_param, loop_param


# we will need to define a function to handle the killer's battle sequence
def killer_battle(health_param, achievements_param, loop_param):
    battle_quote = ['''"You never should have come here!"''', '''"I've got you now!"''',
                    '''"Don't even try to escape!"''', '''Die!''']
    quote_during_battle = random.choice(battle_quote)
    if invulnerability_check(True):
        # time.sleep(1)
        print(f"The Killer says: {quote_during_battle}")
        # time.sleep(3)
        print("However, the killer cannot stop you, you have the upper hand!")
        # time.sleep(3)
        if weapon_check(True) and invulnerability_check(True):
            # time.sleep(3)
            print("You are undefeatable because you carry the killers feather!")
            # time.sleep(3)
            print("You are able to fight because you carry the knife!")
            # time.sleep(3)
            count = 1
            while True:

                rand_chance = random.randint(1, 3)
                if (rand_chance == 2):
                    # time.sleep(3)
                    print("You defeat the killer!")
                    # time.sleep(3)
                    print("The killer lies motionless on the cave floor.")
                    # time.sleep(3)
                    print("You have completed Lanzix 2.")
                    # time.sleep(3)
                    print("Thank you for playing!")
                    # time.sleep(3)
                    print(f"You have completed {get_achievements_length(achievements_param)} achievements!")
                    # time.sleep(3)
                    print("Achievements:")
                    print(get_achievements(achievements_param))
                    # time.sleep(3)
                    time_stop_win = time.perf_counter()
                    print(f"It took this much time to complete the game: {time_stop_win}")
                    exit()
                else:
                    # time.sleep(3)
                    print("The killer dodged your attack!")
                    count += 1
                    # time.sleep(3)
                    print("You prepare for your next attack!")
                    # time.sleep(3)
                    killer_run = random.randint(3, 5)
                    if (count == killer_run):
                        # time.sleep(3)
                        print("The killer runs away!")
                        # time.sleep(3)
                        print("You are left in the darkness as you were.")
                        # time.sleep(3)
                        loop_param = loop_param
                        return health_param, loop_param
                    else:
                        continue
        elif weapon_check(False):
            print("The killer cannot kill you because of your powerful energy.")
            # time.sleep(3)
            print("However, you cannot kill the killer because you don't have a weapon.")
            # time.sleep(3)
            print("The killer seeing that you are immune to his attacks runs off into the darkness.")
            # time.sleep(3)
            loop_param = loop_param
            return health_param, loop_param
        else:
            # time.sleep(3)
            print("The killer cannot kill you because of your powerful energy.")
            # time.sleep(3)
            print("You attack with your weapon, but it does not seem to do any damage.")
            # time.sleep(3)
            print("The killer seeing that you are immune to his attacks runs off into the darkness.")
            # time.sleep(3)
    else:
        damage = random.randint(120, 999)
        health_param -= damage
        # time.sleep(3)
        print(f"You take {damage} damage.")
        print("You died.")
        print("Debug statement - Testing killer_battle")
        # time.sleep(3)
        print("Health: " + str(health_param))
        time_stop_death = time.perf_counter()
        print(f"{time_stop_death}")
        inventory = {}
        active_effects = {}
        achievements = []
        # time.sleep(3)
        # loop_param being 1, returns the player to the beginning
        loop_param = 1
        return health_param, loop_param


def get_achievements_length(achievements_param):
    length = len(achievements_param)
    return length


def get_achievements(achievements_param):
    achievements_param = achievements_param
    return achievements_param


# define a function that will check the player's inventory to see if they have a weapon, and if they do, what weapon
def weapon_check(inventory_param):
    if "knife" in inventory_param:
        print("You have a knife!")
        # time.sleep(3)
        print("You can use this to defend yourself!")
        # time.sleep(3)
        return True
    else:
        print("You have no weapons!")
        # time.sleep(3)
        print("You will have to run!")
        # time.sleep(3)
        return False


# define a function that will check the player's inventory to see if they have the invulnerability items
def invulnerability_check(inventory_param, active_effects_param):
    if "feather" in inventory_param or "powerful energy" in active_effects_param:
        return True
    else:
        return False


def battle_killer_start():
    # time.sleep(3)
    killer = ["The killer sees you!", "The killer hears you!", "The killer spots you!"]
    killer_2 = ["He runs over to you!", "He rushes over to you!", "The killer is on your tail!"]
    choice = random.choice(killer)
    choice_2 = random.choice(killer_2)
    # time.sleep(3)
    print(f"{choice} {choice_2}")
    # time.sleep(3)
    print("Quickly, you prepare for battle")


def inventory_display(inventory):
    print("Inventory Includes:")
    print(inventory)


def effects_display(active_effects):
    print("Active effects:")
    print(active_effects)


def main():
    inventory = {}
    active_effects = {}
    achievements = []
    health = 100
    opening_screen()

    # loop 1 is the loop you get sent back to if you die at any point

    loop = 1
    while (loop == 1):
        health = 100
        print("New run start: ")
        time_start = time.perf_counter()
        # time.sleep(5)

        # loop 2 is the loop where you get sent back by the wizard
        loop = 2
        while (loop == 2):
            intro_a = input("What do you do? ")

            if (intro_a.lower() == "explore" or intro_a.lower() == "go"):
                explore_message()

                explore_a = input("Do you look around for light? ")
                if (explore_a.lower() in user_yes):
                    explore_message_b()

                    print("1: Approach quietly")
                    # time.sleep(3)
                    print("2: Approach")
                    # time.sleep(3)

                    explore_b = input("Do you go towards the scream? ")

                    if (explore_b.lower() == "1"):
                        explore_message_b_1()
                        health = fight_beast(health, inventory, active_effects, loop)[0]
                        loop = fight_beast(health, inventory, active_effects, loop)[1]
                        # TODO: revise this variable
                        # aaron = battle_code_lite(health)
                        if (health <= 0):
                            loop = 1
                        else:
                            loop = 2
                        continue

                    if (explore_b.lower() == "2"):
                        explore_message_b_2()

                        explore_c = input("Do you follow the figure? ")

                        if (explore_c.lower() in user_yes):
                            explore_message_killer_yes()

                            battle_killer_start()
                            aaron = battle_code_killer(health, inventory, active_effects)
                            health = battle_code_killer_2(aaron, health, inventory, active_effects, achievements)
                            continue

                    else:
                        explore_message_c()

                        active_effects["Powerful energy"] = 1
                        # time.sleep(3)
                        print(active_effects)
                        # time.sleep(3)
                        print("With your new found power you will be able to resist any foe!")
                        # time.sleep(3)
                        continue

                if (explore_a.lower() in user_no):
                    explore_message_killer_no()
                    explore_b = input("What do you do? ")
                    print("You decide to " + explore_b)
                    battle_killer_start()
                    aaron = battle_code_killer(health, inventory, active_effects)
                    health = battle_code_killer_2(aaron, health, inventory, active_effects, achievements)
                    continue
                else:
                    # This is regarding looking for light.
                    # This else is for if the user does not type a user_yes or user_no.
                    battle_killer_start()
                    aaron = battle_code_killer(health, inventory, active_effects)
                    health = battle_code_killer_2(aaron, health, inventory, active_effects, achievements)
                    continue

            # wait sequence and battle code sequence are defined for life_loop and death_loop
            if (intro_a.lower() == "wait"):
                health = wait_sequence(health, inventory, active_effects, achievements, loop)
                continue

            if (intro_a.lower() == "juan" or intro_a.lower() == "spencer"):
                inventory["Knife"] = 1
                inventory["Feather"] = 1
                inventory["Golden ring"] = 1
                active_effects["Powerful energy"] = 1
                inventory_display(inventory)
                loop = 2
                continue

            else:
                print("You decide to " + intro_a)
                choice_5_a()

                inspect_a = input("Do you investigate the room further? ")
                if (inspect_a.lower() in user_yes):
                    choice_5_b()
                    # loop 3 is the loop that lets you make choices to explore the room
                    loop = 3
                    while (loop == 3):
                        choice_5_c()

                        choice_a = input("What do you do? ")
                        if (choice_a.lower() == "1"):
                            # loop = 3
                            loop = wait_sequence(health, inventory, active_effects, achievements, loop)
                            print(loop)

                            # commented out this conditional selection
                            """if  (health <= 0):
                                print(health)
                                loop = 1
                                continue
                            else:
                                loop = 3
                                continue"""

                            continue

                        if (choice_a.lower() == "2"):
                            approach_pressure_plates()

                            choice_plate1 = input("Which pressure plate do you choose? ")
                            if (choice_plate1.lower() == "1"):
                                pressure_plate_1()

                                choice_plate1_a = input("What do you try now? ")
                                if (choice_plate1_a.lower() == "look for a clue" or
                                        choice_plate1_a.lower() == "look for clue" or
                                        choice_plate1_a.lower() == "look"):

                                    achievement_unlocked("Look for clue")

                                    pressure_plate_1_clue()
                                    loop = 3
                                    continue

                                else:
                                    # time.sleep(3)
                                    print("You decide to " + choice_plate1_a)
                                    # time.sleep(3)
                                    print(f"Unfortunately, {choice_plate1_a} does not work. ")
                                    # time.sleep(3)
                                    loop = 3
                                    continue

                                    # TODO: can we even define the above because we use the user input "choice_plate1_a"

                            if (choice_plate1.lower() == "2"):
                                pressure_plate_2()

                                if ("Golden ring" in inventory):
                                    pressure_plate_2_survive()
                                    # this loop allows you to approach the wizard
                                    loop = 4
                                    while (loop == 4):
                                        lake_wizard = input("Do you approach the wizard? ")
                                        if (lake_wizard.lower() in user_yes):
                                            pressure_plate_2_wizard()
                                            # this loop lets you choose an option from the wizard
                                            loop = 5
                                            while (loop == 5):
                                                wizard_ask()

                                                wizard_questions = input("What do you ask the Wizard? ")
                                                if (wizard_questions.lower() == "1"):
                                                    wizard_question_1()
                                                    loop = 5
                                                    continue

                                                if (wizard_questions.lower() == "2"):
                                                    wizard_question_2()
                                                    loop = 5
                                                    continue

                                                if (wizard_questions.lower() == "3"):
                                                    wizard_question_3()

                                                    if ("knife" in inventory):
                                                        wizard_question_3a()
                                                        loop = 5
                                                        continue
                                                    else:
                                                        pass
                                                        loop = 5
                                                        continue

                                                if (wizard_questions.lower() == "4"):
                                                    wizard_question_4()
                                                    # TODO: revise the loops and fix
                                                    loop = 2
                                                    # break
                                                    # break
                                                    # break
                                                    continue

                                                    # Yeah we need 3 breaks. CRAZY right????!!!?!?!?!
                                                else:
                                                    # time.sleep(3)
                                                    loop = 5
                                                    achievement_unlocked("I won't follow your rules!")
                                                    # TODO: possibly revise print statement
                                                    print("Nice! Now please choose a valid response!")
                                                    continue

                                        else:
                                            approach_wizard_no()
                                            achievement_unlocked("Learn your name")
                                            # time.sleep(3)
                                            continue


                                else:
                                    wizard_fall()
                                    # reset lists and dictionaries
                                    inventory = {}
                                    active_effects = {}
                                    achievements = []
                                    achievement_unlocked("Humpty Dumpty had a big fall.", achievements)
                                    # TODO: revise this break statement
                                    loop = 1
                                    # break
                                    continue

                            if (choice_plate1.lower() == "3"):
                                knife_chance = random.randint(0, 5)
                                achievement_unlocked("Examine pressure plate #3!", achievements)

                                if (knife_chance == 2 or knife_chance == 3):
                                    inventory["Knife"] = 1
                                    print("You find a knife as you stepped on the pressure plate!")
                                    # time.sleep(3)
                                    inventory_display(inventory)
                                else:
                                    wait_sequence(health, inventory, active_effects, loop)

                                continue

                        if (choice_a.lower() == "3"):
                            plants_1()

                            hidden_passage = input("Do you attempt to go through the passageway? ")
                            if (hidden_passage.lower() in user_yes and "Golden ring" in inventory):
                                plants_2()
                                # this loop is for acquiring the feather
                                loop = 6
                                while (loop == 6):
                                    # time.sleep(3)
                                    if ("Feather" not in inventory):
                                        hidden_passage_feather = input("Do you take the feather? ")

                                        if (hidden_passage_feather.lower() in user_yes):
                                            plants_3()
                                            inventory["Feather"] = 1
                                            # time.sleep(3)
                                            print(inventory)

                                            hidden_passage_killer = input("What do you do(Run or Hide)? ")

                                            if (hidden_passage_killer.lower() == "hide"):
                                                plants_4()
                                                battle_killer_start()
                                                aaron = battle_code_killer(health, inventory, active_effects)
                                                health = battle_code_killer_2(aaron, health, inventory, active_effects,
                                                                              achievements)
                                                # TODO: revise these break statements to be in line with rest of code
                                                # i am assuming that two breaks will take us back two loops
                                                loop = 4
                                                # break
                                                # break
                                                continue

                                            if (hidden_passage_killer.lower() == "run"):
                                                plants_5()
                                                battle_killer_start()
                                                aaron = battle_code_killer(health, inventory, active_effects)
                                                health = battle_code_killer_2(aaron, health, inventory, active_effects,
                                                                              achievements)
                                                # TODO: revise these break statements to be in line with rest of code
                                                # i am assuming that two breaks will take us back two loops
                                                loop = 4
                                                # break
                                                # break
                                                continue



                                            else:
                                                # time.sleep(3)
                                                print("You had two choices, (Run or Hide).")
                                                # time.sleep(3)
                                                print("But, you ignored them!!")
                                                achievement_unlocked("Ignore the parameters!")
                                                plants_6(hidden_passage_killer)
                                                battle_killer_start()
                                                aaron = battle_code_killer(health, inventory, active_effects)
                                                health = battle_code_killer_2(aaron, health, inventory, active_effects,
                                                                              achievements)
                                                # TODO: revise these break statements to be in line with rest of code
                                                # i am assuming that two breaks will take us back two loops
                                                loop = 4
                                                # break
                                                # break
                                                continue




                                        else:
                                            print("Are you sure you don't want the feather?")
                                        # time.sleep(3)
                                        continue

                                    if ("Feather" in inventory and "Knife" in inventory):
                                        # time.sleep(3)
                                        print("You are prepared for battle.")

                                        battle_killer_start()
                                        aaron = battle_code_killer(health, inventory, active_effects)
                                        battle_code_killer_2(aaron, health, inventory, active_effects, achievements)
                                        # i am assuming that two breaks will take us back two loops
                                        loop = 4
                                        # break
                                        # break
                                        continue

                                    else:
                                        # time.sleep(3)
                                        print("The killer is walking through the room when he spots you!")
                                        # time.sleep(3)

                                        battle_killer_start()
                                        aaron = battle_code_killer(health, inventory, active_effects)
                                        health = battle_code_killer_2(aaron, health, inventory, active_effects,
                                                                      achievements)
                                        # i am assuming that two breaks will take us back two loops
                                        loop = 4
                                        # break
                                        # break
                                        continue

                            if (hidden_passage.lower() in user_no):
                                achievement_unlocked("Don't go in the passageway!")
                                # time.sleep(3)
                                print("You double back to the center of the room.")
                                # time.sleep(3)
                                continue
                            else:
                                # time.sleep(3)
                                print("The door won't budge!")
                                # time.sleep(3)
                                print("You double back to the center of the room.")
                                # time.sleep(3)
                                continue

                        if (choice_a.lower() == "4"):
                            achievement_unlocked("Sleep")
                            # time.sleep(3)
                            print("You awake.")
                            # time.sleep(3)
                            continue

                        if (choice_a.lower() == "5" and "Golden ring" not in inventory):
                            basin_1()

                            basin = input("Do you attempt to take the ring? ")
                            if (basin.lower() in user_yes):
                                # time.sleep(3)
                                basin_random = random.randint(0, 4)
                                if (basin_random == 1 or basin_random == 2 or basin_random == 3):
                                    # time.sleep(1)
                                    print("You got the Golden ring")
                                    # time.sleep(3)
                                    inventory["Golden ring"] = 1
                                    inventory_display(inventory)
                                    continue
                                else:
                                    # time.sleep(3)

                                    battle_killer_start()
                                    aaron = battle_code_killer(health, inventory, active_effects)
                                    health = battle_code_killer_2(aaron, health, inventory, active_effects,
                                                                  achievements)
                                    if (health <= 0):
                                        # print(health)
                                        loop = 1
                                        continue
                                    else:
                                        loop = 3
                                        continue
                                    # I am assuming that we go back to choice selection loop
                                    # break
                                    # break
                                    # continue

                        if (choice_a.lower() == "5" and "Golden ring" in inventory):
                            # time.sleep(3)
                            print("You've already been here.")
                            # time.sleep(3)
                            achievement_unlocked("Thorough explorer")
                        else:
                            # time.sleep(3)
                            continue

                if (inspect_a.lower() in user_no):
                    inspect_no()

                    battle_killer_start()
                    aaron = battle_code_killer(health, inventory, active_effects)
                    health = battle_code_killer_2(aaron, health, inventory, active_effects, achievements)
                    if (health <= 0):
                        print(health)
                        loop = 1
                        continue
                    else:
                        loop = 2
                        continue

                else:
                    # time.sleep(3)
                    battle_killer_start()
                    aaron = battle_code_killer(health, inventory, active_effects)
                    health = battle_code_killer_2(aaron, health, inventory, active_effects, achievements, loop)
                    if (health <= 0):
                        print(health)
                        loop = 1
                        continue
                    else:
                        loop = 2
                        continue


main()
